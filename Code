#include <iostream>
#include <cstdlib>
#include <ctime>
using namespace std;
char board[3][3]={{'1', '2', '3'},{'4', '5', '6'},{'7', '8', '9'}};
char c_marker;
int c_player;
void drawB(){			//This Function prints out integers in such a pattern that it looks like board
	cout<<endl<<endl;
    cout<<" "<<board[0][0]<<" | "<<board[0][1]<<" | "<<board[0][2]<<endl;
    cout<<"------------\n";
    cout<<" "<<board[1][0]<<" | "<<board[1][1]<<" | "<<board[1][2]<<endl;
    cout<<"------------\n";
    cout<<" "<<board[2][0]<<" | "<<board[2][1]<<" | "<<board[2][2]<<endl;
    cout<<endl<<endl;
}
bool placepoint(int slot){	//Function used to input slots 
    int row=slot/3;		//Instead of this,an easier option is that the programmer can take rows and column separately from the player.
    int col;			//But it would be difficult for the payer that is playing the game.
    if(slot%3==0){		//This is done for finding fixed location for marker to be placed
        row=row-1;
        col=2;
    }else
    col=(slot%3)-1;
    if(board[row][col]=='X' || board[row][col]=='O')		//If is used to check whether the location is currently occupied or not
   { board[row][col]=c_marker;
    return true;}			//Function returns true is space is currently occupied else returns false
    else
    return false;
}
int winner(){
    //winner fuction is used to determine which player wins the game
    for(int i=0;i<3;i++){
        if(board[i][0]==board[i][1] && board[i][1]==board[i][2])
        return c_player;
        if(board[0][i]==board[1][i] && board[1][i]==board[2][i])
        return c_player;
    }
    if(board[0][0]==board[1][1] && board[1][1]==board[2][2])
        return c_player;
        if(board[0][2]==board[1][1] && board[1][1]==board[2][0])
        return c_player;
    return 0;
}
void marker_player_swap(){		//This function swaps marker and user so that other user can play
    if(c_marker=='X')
    c_marker='O';
    else c_marker='X';
    if(c_player==1)
    c_player=2;
    else c_player=1;
}
void game(){
    char mark;
    int slot,win;
    drawB();
    cout<<"Player 1. Enter your marker X or O : ";
    cin>>mark;
    c_marker=mark;
    c_player=1;  
        //For 9 moves,making max 9 moves
    for(int i=0;i<9;i++){			//Game can be played in maximum 9 turns
        cout<<"It's "<<c_player<<" turn, Enter spot :: ";
        cin>>slot;
        if(slot<1&&slot>9)			//If user inputs wrong slot
        {
            cout<<"Invalid slot";
            continue;
        }
        if(!placepoint(slot)){			//If executes if placepoint return false, Or the place is occupied
            cout<<"Slot is occupied, Try again";
            i--;
            continue;
        }
        drawB();			//calling function to draw board
        win=winner();
        if(win==1){
            cout<<"\nPlayer 1 has won! Congragulation";
        break;}
        if(win==2){
            cout<<"\nPlayer 2 has won! Congragulation";
        break;}
        marker_player_swap();
    }
    if(win==0)
    cout<<"\nIt's a Tie : ";
}
int main()
{
    game();
}
